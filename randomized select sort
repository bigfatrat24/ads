#include <iostream>
#include <vector>
#include <cstdlib> // For rand()
#include <ctime>   // For seeding rand()

using namespace std;

// Function to partition the array around a randomly chosen pivot
int randomizedPartition(vector<int>& arr, int low, int high) {
    int pivotIndex = low + rand() % (high - low + 1); // Choose a random pivot
    swap(arr[pivotIndex], arr[high]); // Move pivot to end
    int pivot = arr[high];
    int i = low - 1;

    for (int j = low; j < high; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return i + 1;
}

// Function to recursively sort the array using randomized pivot selection
void randomizedSelectSort(vector<int>& arr, int low, int high) {
    if (low < high) {
        int pivotIndex = randomizedPartition(arr, low, high);
        randomizedSelectSort(arr, low, pivotIndex - 1);  // Sort elements before pivot
        randomizedSelectSort(arr, pivotIndex + 1, high); // Sort elements after pivot
    }
}

int main() {
    srand(time(0)); // Seed random number generator

    vector<int> arr = {9, 3, 7, 1, 5, 4, 8, 6, 2};
    cout << "Original array: ";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;

    randomizedSelectSort(arr, 0, arr.size() - 1);

    cout << "Sorted array: ";
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}
